extend type Query {
	products(first: Int!, skip: Int): [Product!]!
	productsByCategory(first: Int!, category: String!, skip: Int): [Product!]!
	product(id: ID!): GetProductPayload!
}

type Product {
	id: ID!
	name: String!
	slug: String!
	description: String!
	price: String!
	createdAt: DateTime!
	updatedAt: DateTime!
	categories: [Category]!
}

type GetProductPayload {
	product: Product
	productErrors: [GetProductError!]!
}

union GetProductError = ProductNotFound

type ProductNotFound {
	message: String!
}
