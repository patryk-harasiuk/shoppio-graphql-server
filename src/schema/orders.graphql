extend type Query {
	order(id: ID!): GetOrderPayload!
}

type Mutation {
	addToOrder(orderId: ID, productId: ID!, quantity: Int!): AddToOrderPayload!
	removeOrderItem(orderId: ID!, productId: ID!): RemoveOrderItemPayload!
}

type Order {
	id: ID!
	status: String!
	orderItems: [OrderItem]!
}

type OrderItem {
	quantity: Int!
	product: Product!
}

type GetOrderPayload {
	order: Order
	orderErrors: [GetOrderError!]!
}

union GetOrderError = OrderNotFound

type OrderNotFound {
	message: String!
}

type AddToOrderPayload {
	order: Order
	orderErrors: [AddToOrderError!]!
}

type InvalidOrder {
	message: String!
}

type InvalidQuantity {
	message: String!
}

union AddToOrderError =
	  OrderNotFound
	| ProductNotFound
	| InvalidOrder
	| InvalidQuantity

type RemoveOrderItemPayload {
	removedItem: OrderItem
	orderErrors: [RemoveOrderItemError!]!
}

union RemoveOrderItemError = OrderNotFound | ProductNotFound
