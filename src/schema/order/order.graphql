extend type Query {
	order(id: ID!): OrderResult
}

type Mutation {
	updateOrder(orderId: ID, productId: ID!, quantity: Int!): UpdateOrderResult
	removeAllItemsFromOrder(orderId: ID!): RemoveAllItemsFromOrderResult
}

type Order {
	id: ID!
	status: String!
	totalPrice: String!
	orderItems: [OrderItem!]!
}

type OrderItem {
	quantity: Int!
	product: Product!
}

type OrderSuccess {
	order: Order!
}

union OrderResult = OrderSuccess | OrderNotFound

type OrderNotFound {
	message: String!
}

type InvalidQuantity {
	message: String!
}

type AddToOrderError {
	message: String!
}

type UpdatedOrder {
	order: Order!
}

union UpdateOrderResult = UpdatedOrder | InvalidQuantity | AddToOrderError

union RemoveAllItemsFromOrderResult =
	  RemoveAllItemsFromOrderSuccess
	| OrderNotFound

type RemoveAllItemsFromOrderSuccess {
	message: String!
}
