extend type Query {
	order(id: ID!): OrderResult
}

type Mutation {
	addToOrder(orderId: ID, productId: ID!, quantity: Int!): AddToOrderResult
	removeOrderItem(orderId: ID!, productId: ID!): RemoveOrderItemResult
}

type Order {
	id: ID!
	status: String!
	orderItems: [OrderItem]!
}

type OrderItem {
	quantity: Int!
	product: Product!
}

type OrderSuccess {
	order: Order!
}

union OrderResult = OrderSuccess | OrderNotFound

type OrderNotFound {
	message: String!
}

type InvalidQuantity {
	message: String!
}

type AddToOrderError {
	message: String!
}

type UpdatedOrder {
	order: Order!
}

union AddToOrderResult = UpdatedOrder | InvalidQuantity | AddToOrderError

union RemoveOrderItemResult = RemovedOrderItem | OrderNotFound | ProductNotFound

type RemovedOrderItem {
	removedItem: OrderItem!
}
